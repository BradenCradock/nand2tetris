<tokens>
 <KEYWORD> CLASS</KEYWORD> 
 <IDENTIFIER> Main</IDENTIFIER> 
 <SYMBOL> {</SYMBOL> 
 <KEYWORD> STATIC</KEYWORD> 
 <KEYWORD> BOOLEAN</KEYWORD> 
 <IDENTIFIER> test</IDENTIFIER> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> FUNCTION</KEYWORD> 
 <KEYWORD> VOID</KEYWORD> 
 <IDENTIFIER> main</IDENTIFIER> 
 <SYMBOL> (</SYMBOL> 
 <SYMBOL> )</SYMBOL> 
 <SYMBOL> {</SYMBOL> 
 <KEYWORD> VAR</KEYWORD> 
 <IDENTIFIER> SquareGame</IDENTIFIER> 
 <IDENTIFIER> game</IDENTIFIER> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> LET</KEYWORD> 
 <IDENTIFIER> game</IDENTIFIER> 
 <SYMBOL> =</SYMBOL> 
 <IDENTIFIER> SquareGame</IDENTIFIER> 
 <SYMBOL> .</SYMBOL> 
 <IDENTIFIER> new</IDENTIFIER> 
 <SYMBOL> (</SYMBOL> 
 <SYMBOL> )</SYMBOL> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> DO</KEYWORD> 
 <IDENTIFIER> game</IDENTIFIER> 
 <SYMBOL> .</SYMBOL> 
 <IDENTIFIER> run</IDENTIFIER> 
 <SYMBOL> (</SYMBOL> 
 <SYMBOL> )</SYMBOL> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> DO</KEYWORD> 
 <IDENTIFIER> game</IDENTIFIER> 
 <SYMBOL> .</SYMBOL> 
 <IDENTIFIER> dispose</IDENTIFIER> 
 <SYMBOL> (</SYMBOL> 
 <SYMBOL> )</SYMBOL> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> RETURN</KEYWORD> 
 <SYMBOL> ;</SYMBOL> 
 <SYMBOL> }</SYMBOL> 
 <KEYWORD> FUNCTION</KEYWORD> 
 <KEYWORD> VOID</KEYWORD> 
 <IDENTIFIER> test</IDENTIFIER> 
 <SYMBOL> (</SYMBOL> 
 <SYMBOL> )</SYMBOL> 
 <SYMBOL> {</SYMBOL> 
 <KEYWORD> VAR</KEYWORD> 
 <KEYWORD> INT</KEYWORD> 
 <IDENTIFIER> i,</IDENTIFIER> 
 <IDENTIFIER> j</IDENTIFIER> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> VAR</KEYWORD> 
 <IDENTIFIER> String</IDENTIFIER> 
 <IDENTIFIER> s</IDENTIFIER> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> VAR</KEYWORD> 
 <IDENTIFIER> Array</IDENTIFIER> 
 <IDENTIFIER> a</IDENTIFIER> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> IF</KEYWORD> 
 <SYMBOL> (</SYMBOL> 
 <KEYWORD> FALSE</KEYWORD> 
 <SYMBOL> )</SYMBOL> 
 <SYMBOL> {</SYMBOL> 
 <KEYWORD> LET</KEYWORD> 
 <IDENTIFIER> s</IDENTIFIER> 
 <SYMBOL> =</SYMBOL> 
 <STRING_CONST> string</STRING_CONST> 
 <IDENTIFIER> constant&quot;</IDENTIFIER> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> LET</KEYWORD> 
 <IDENTIFIER> s</IDENTIFIER> 
 <SYMBOL> =</SYMBOL> 
 <KEYWORD> NULL</KEYWORD> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> LET</KEYWORD> 
 <IDENTIFIER> a[1]</IDENTIFIER> 
 <SYMBOL> =</SYMBOL> 
 <IDENTIFIER> a[2]</IDENTIFIER> 
 <SYMBOL> ;</SYMBOL> 
 <SYMBOL> }</SYMBOL> 
 <KEYWORD> ELSE</KEYWORD> 
 <SYMBOL> {</SYMBOL> 
 <KEYWORD> LET</KEYWORD> 
 <IDENTIFIER> i</IDENTIFIER> 
 <SYMBOL> =</SYMBOL> 
 <IDENTIFIER> i</IDENTIFIER> 
 <SYMBOL> *</SYMBOL> 
 <SYMBOL> (</SYMBOL> 
 <SYMBOL> -j</SYMBOL> 
 <SYMBOL> )</SYMBOL> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> LET</KEYWORD> 
 <IDENTIFIER> j</IDENTIFIER> 
 <SYMBOL> =</SYMBOL> 
 <IDENTIFIER> j</IDENTIFIER> 
 <SYMBOL> /</SYMBOL> 
 <SYMBOL> (</SYMBOL> 
 <SYMBOL> -2</SYMBOL> 
 <SYMBOL> )</SYMBOL> 
 <SYMBOL> ;</SYMBOL> 
 <KEYWORD> LET</KEYWORD> 
 <IDENTIFIER> i</IDENTIFIER> 
 <SYMBOL> =</SYMBOL> 
 <IDENTIFIER> i</IDENTIFIER> 
 <SYMBOL> |</SYMBOL> 
 <IDENTIFIER> j</IDENTIFIER> 
 <SYMBOL> ;</SYMBOL> 
 <SYMBOL> }</SYMBOL> 
 <KEYWORD> RETURN</KEYWORD> 
 <SYMBOL> ;</SYMBOL> 
 <SYMBOL> }</SYMBOL> 
 <SYMBOL> }</SYMBOL> 
</tokens>
